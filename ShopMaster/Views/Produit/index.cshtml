@using Microsoft.AspNetCore.Html
@model List<Produit>
@{
    ViewData["Title"] = "Liste des Produits";
    int pageIndex = (int)ViewData["PageIndex"]!;
    int totalPages = (int)ViewData["TotalPages"]!;
    string Search = (string)ViewData["Search"]!; // Corrigé : "Search" au lieu de "search"
    string column = (string)ViewData["colonne"]!;
    string orderBy = (string)ViewData["ordre"]!; // Corrigé : "ordre" au lieu de "order"

    HtmlString getArrow(string tableColumn)
    {
        if (tableColumn != column) return new HtmlString("");
        if (orderBy == "desc")
        {
            return new HtmlString("<i class='bi bi-arrow-down ms-1'></i>");
        }

        return new HtmlString("<i class='bi bi-arrow-up ms-1'></i>");
    }
}

<!-- SweetAlert2 CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.10.1/sweetalert2.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.10.1/sweetalert2.all.min.js"></script>

<div class="container mt-5">
    <div class="row">
        <div class="col">
            <a asp-controller="Produit" asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i>
                Ajouter Produit
            </a>
        </div>
        <div class="col">
            <form class="d-flex" role="search">
                <input class="form-control me-2" type="search" name="search" value="@Search" placeholder="Search by Name or Brand" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
    </div>

    <div class="mt-5">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th style="cursor: pointer;" onclick="sortTable('Id')">
                                <div class="d-flex align-items-center">
                                    Id @getArrow("Id")
                                </div>
                            </th>
                            <th style="cursor: pointer;" onclick="sortTable('Nom')">
                                <div class="d-flex align-items-center">
                                    Nom @getArrow("Nom")
                                </div>
                            </th>
                            <th style="cursor: pointer;" onclick="sortTable('Marque')">
                                <div class="d-flex align-items-center">
                                    Marque @getArrow("Marque")
                                </div>
                            </th>
                            <th>Quantité</th>
                            <th style="cursor: pointer;" onclick="sortTable('Prix')">
                                <div class="d-flex align-items-center">
                                    Prix @getArrow("Prix")
                                </div>
                            </th>
                            <th>Description</th>
                            <th>Image</th>
                            <th style="cursor: pointer;" onclick="sortTable('DateCreation')">
                                <div class="d-flex align-items-center">
                                    Date Création @getArrow("DateCreation")
                                </div>
                            </th>
                            <th>Actions</th>
                        </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr>
                            <td>@product.Id</td>
                            <td>@product.Nom</td>
                            <td>@product.Marque</td>
                            <td>@product.qte</td>
                            <td>@product.Prix.ToString("C")</td>
                            <td>
                                @if (!string.IsNullOrEmpty(product.Description))
                                {
                                    @(product.Description.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)
                                }
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="~/product/@product.ImageUrl"
                                         alt="@product.Nom"
                                         width="80"
                                         class="img-thumbnail"
                                         onerror="this.src='/images/no-image.png';" />
                                }
                                else
                                {
                                    <span class="text-muted">Aucune image</span>
                                }
                            </td>
                            <td>@product.DateCreation.ToString("dd/MM/yyyy")</td>
                            <td style="white-space:nowrap">
                                <a asp-controller="Produit" asp-action="Details" asp-route-id="@product.Id"
                                   class="btn btn-sm btn-info me-1"
                                   title="Voir les détails">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a asp-controller="Produit" asp-action="Edit" asp-route-id="@product.Id"
                                   class="btn btn-sm btn-warning me-1"
                                   title="Modifier">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button class="btn btn-sm btn-danger delete-btn"
                                        data-id="@product.Id"
                                        data-name="@product.Nom"
                                        title="Supprimer">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
       
        <!-- Statistiques simples -->
        <div class="row mt-4">
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">@Model.Count</h5>
                        <p class="card-text">Total Produits</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">@Model.Sum(p => p.qte)</h5>
                        <p class="card-text">Quantité Totale</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">@Model.Average(p => p.Prix).ToString("C")</h5>
                        <p class="card-text">Prix Moyen</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">@Model.Sum(p => p.Prix * p.qte).ToString("C")</h5>
                        <p class="card-text">Valeur Totale</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center" role="alert">
            <h4 class="alert-heading">Aucun produit disponible</h4>
            <p>Commencez par ajouter votre premier produit.</p>
            <hr>
            <a asp-controller="Produit" asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>
                Ajouter un Produit
            </a>
        </div>
    }
</div>
<nav>
    <ul class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            string active = "";
            if (i == pageIndex) active = "active";
            <li class="page-item @active">
                <a class="page-link" asp-route-pageIndex="@i"
                                     asp-route-search="@Search"
                                     asp-route-column="@column" 
                                     asp-route-orderBy="@orderBy">@i</a>
            </li>
        }
    </ul>
</nav>

@section Scripts {
    <script>
        // Affichage des messages avec SweetAlert2
        document.addEventListener('DOMContentLoaded', function() {
            // Messages de succès
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Succès !',
                        text: '@Html.Raw(TempData["SuccessMessage"])',
                        timer: 3000,
                        showConfirmButton: false,
                        toast: true,
                        position: 'top-end'
                    });
            </text>
        }

        @if (TempData["success"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Succès !',
                        text: '@Html.Raw(TempData["success"])',
                        timer: 3000,
                        showConfirmButton: false,
                        toast: true,
                        position: 'top-end'
                    });
            </text>
        }

            // Messages d'erreur
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Erreur !',
                        text: '@Html.Raw(TempData["ErrorMessage"])',
                        timer: 4000,
                        showConfirmButton: true,
                        toast: true,
                        position: 'top-end'
                    });
            </text>
        }

        @if (TempData["error"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Erreur !',
                        text: '@Html.Raw(TempData["error"])',
                        timer: 4000,
                        showConfirmButton: true,
                        toast: true,
                        position: 'top-end'
                    });
            </text>
        }

            // Gestion de la suppression avec confirmation
            document.querySelectorAll('.delete-btn').forEach(function(button) {
                button.addEventListener('click', function(e) {
                    e.preventDefault();

                    const productId = this.getAttribute('data-id');
                    const productName = this.getAttribute('data-name');

                    Swal.fire({
                        title: 'Êtes-vous sûr ?',
                        text: `Vous allez supprimer le produit "${productName}". Cette action est irréversible !`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Oui, supprimer !',
                        cancelButtonText: 'Annuler',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Afficher un loader pendant la suppression
                            Swal.fire({
                                title: 'Suppression en cours...',
                                text: 'Veuillez patienter',
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                showConfirmButton: false,
                                didOpen: () => {
                                    Swal.showLoading();
                                }
                            });

                            // Rediriger vers l'action de suppression
                            window.location.href = `@Url.Action("Delete", "Produit")?id=${productId}`;
                        }
                    });
                });
            });
        });
            function sortTable(column) {
                let orderBy = "desc"
                let currentColumn = "@column";
                let currentOrder = "@orderBy";
                if (column === currentColumn) {
                    if (currentOrder == "asc") orderBy = "desc";
                    else orderBy = "asc";
                }
                window.location.href = "?search=@(Search)&column=" + column + "&orderBy=" + orderBy
            }
    </script>
}